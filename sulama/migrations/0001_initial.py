# Generated by Django 4.2.7 on 2025-07-17 20:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bolge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isim', models.CharField(max_length=100, unique=True, verbose_name='Bölge Adı')),
                ('aciklama', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('bolge_iletisim', models.CharField(blank=True, max_length=100, null=True, verbose_name='İletişim')),
                ('yonetici', models.CharField(blank=True, max_length=100, null=True, verbose_name='Yönetici')),
                ('adres', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adres')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
            ],
            options={
                'verbose_name': 'Bölge',
                'verbose_name_plural': 'Bölgeler',
                'ordering': ['isim'],
            },
        ),
        migrations.CreateModel(
            name='DepolamaTesisi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isim', models.CharField(max_length=100, verbose_name='Tesis Adı')),
                ('aciklama', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('geometri', models.TextField(blank=True, null=True, verbose_name='Geometri (JSON)')),
                ('kret_kotu', models.FloatField(blank=True, null=True, verbose_name='Kret Kotu (m)')),
                ('maksimum_su_kot', models.FloatField(blank=True, null=True, verbose_name='Maksimum Su Kotu (m)')),
                ('minimum_su_kot', models.FloatField(blank=True, null=True, verbose_name='Minimum Su Kotu (m)')),
                ('maksimum_hacim', models.FloatField(blank=True, null=True, verbose_name='Maksimum Hacim (m³)')),
                ('minimum_hacim', models.FloatField(blank=True, null=True, verbose_name='Minimum Hacim (m³)')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
            ],
            options={
                'verbose_name': 'Depolama Tesisi',
                'verbose_name_plural': 'Depolama Tesisleri',
                'ordering': ['sulama__bolge__isim', 'isim'],
            },
        ),
        migrations.CreateModel(
            name='Kanal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isim', models.CharField(max_length=100, verbose_name='Kanal Adı')),
                ('aciklama', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('kanal_kodu', models.CharField(blank=True, max_length=20, null=True, verbose_name='Kanal Kodu')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('depolama_tesisi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanallar', to='sulama.depolamatesisi', verbose_name='Depolama Tesisi')),
            ],
            options={
                'verbose_name': 'Kanal',
                'verbose_name_plural': 'Kanallar',
                'ordering': ['depolama_tesisi', 'isim'],
                'unique_together': {('depolama_tesisi', 'isim')},
            },
        ),
        migrations.CreateModel(
            name='Sulama',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isim', models.CharField(max_length=100, verbose_name='Sulama  Adi')),
                ('aciklama', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('bolge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sulamalar', to='sulama.bolge', verbose_name='Bölge')),
            ],
            options={
                'verbose_name': 'Sulama Adi',
                'verbose_name_plural': 'Sulama ',
                'ordering': ['bolge__isim', 'isim'],
                'unique_together': {('bolge', 'isim')},
            },
        ),
        migrations.CreateModel(
            name='UrunKategorisi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isim', models.CharField(max_length=100, unique=True, verbose_name='Kategori Adı')),
                ('aciklama', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
            ],
            options={
                'verbose_name': 'Ürün Kategorisi',
                'verbose_name_plural': 'Ürün Kategorileri',
                'ordering': ['isim'],
            },
        ),
        migrations.CreateModel(
            name='YillikGenelSuTuketimi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yil', models.IntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2050)], verbose_name='Yıl')),
                ('ciftlik_randi', models.FloatField(default=80, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Çiftlik Randı (%)')),
                ('iletim_randi', models.FloatField(default=85, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='İletim Randı (%)')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('sulama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yillik_genel_su_tuketimi', to='sulama.sulama', verbose_name='Sulama Adi')),
            ],
            options={
                'verbose_name': 'Yıllık Genel Su Tüketimi',
                'verbose_name_plural': 'Yıllık Genel Su Tüketimi',
                'ordering': ['-yil', 'sulama__bolge__isim', 'sulama__isim'],
            },
        ),
        migrations.CreateModel(
            name='Urun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isim', models.CharField(max_length=100, verbose_name='Ürün Adı')),
                ('baslangic_tarihi', models.DateField(blank=True, help_text='Ürünün ekiliş tarihi', null=True, verbose_name='Başlangıç Tarihi')),
                ('bitis_tarihi', models.DateField(blank=True, help_text='Ürünün hasat tarihi', null=True, verbose_name='Bitiş Tarihi')),
                ('kar_orani', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Kar Oranı (%)')),
                ('ocak', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ocak Katsayısı')),
                ('subat', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Şubat Katsayısı')),
                ('mart', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Mart Katsayısı')),
                ('nisan', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nisan Katsayısı')),
                ('mayis', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Mayıs Katsayısı')),
                ('haziran', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Haziran Katsayısı')),
                ('temmuz', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Temmuz Katsayısı')),
                ('agustos', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ağustos Katsayısı')),
                ('eylul', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Eylül Katsayısı')),
                ('ekim', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ekim Katsayısı')),
                ('kasim', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Kasım Katsayısı')),
                ('aralik', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Aralık Katsayısı')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('kategori', models.ManyToManyField(blank=True, related_name='urunler', to='sulama.urunkategorisi', verbose_name='Kategoriler')),
                ('sulama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urunler', to='sulama.sulama', verbose_name='Sulama Adi')),
            ],
            options={
                'verbose_name': 'Ürün',
                'verbose_name_plural': 'Ürünler',
                'ordering': ['sulama__bolge__isim', 'sulama__isim', 'isim'],
                'unique_together': {('sulama', 'isim')},
            },
        ),
        migrations.AddField(
            model_name='depolamatesisi',
            name='sulama',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depolama_tesisleri', to='sulama.sulama', verbose_name='Sulama Adi'),
        ),
        migrations.CreateModel(
            name='YillikUrunDetay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alan', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Alan (ha)')),
                ('ekim_orani', models.FloatField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Ekim Oranı (%)')),
                ('su_tuketimi', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Su Tüketimi (m³)')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturma Tarihi')),
                ('urun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yillik_urun_detaylari', to='sulama.urun', verbose_name='Ürün')),
                ('yillik_tuketim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urun_detaylari', to='sulama.yillikgenelsutuketimi', verbose_name='Yıllık Tüketim')),
            ],
            options={
                'verbose_name': 'Yıllık Ürün Detayı',
                'verbose_name_plural': 'Yıllık Ürün Detayları',
                'ordering': ['yillik_tuketim__yil', 'urun__isim'],
                'unique_together': {('yillik_tuketim', 'urun')},
            },
        ),
        migrations.CreateModel(
            name='KanalAbak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hacim', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Hacim (m³)')),
                ('yukseklik', models.FloatField(verbose_name='Yükseklik (m)')),
                ('kanal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abaklar', to='sulama.kanal', verbose_name='Kanal')),
            ],
            options={
                'verbose_name': 'Kanal Abağı',
                'verbose_name_plural': 'Kanal Abakları',
                'ordering': ['kanal', 'yukseklik'],
                'unique_together': {('kanal', 'yukseklik')},
            },
        ),
        migrations.CreateModel(
            name='GunlukSebekeyeAlinanSuMiktari',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tarih', models.DateField(verbose_name='Tarih')),
                ('baslangic_saati', models.DateTimeField(verbose_name='Başlangıç Saati')),
                ('bitis_saati', models.DateTimeField(verbose_name='Bitiş Saati')),
                ('yukseklik', models.FloatField(verbose_name='Yükseklik (m)')),
                ('su_miktari', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Su Miktarı (m³)')),
                ('kanal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gunluk_su_miktarlari', to='sulama.kanal', verbose_name='Kanal')),
            ],
            options={
                'verbose_name': 'Günlük Şebekeye Alınan Su Miktarı',
                'verbose_name_plural': 'Günlük Şebekeye Alınan Su Miktarları',
                'ordering': ['-tarih', 'kanal'],
                'unique_together': {('kanal', 'tarih', 'baslangic_saati')},
            },
        ),
        migrations.CreateModel(
            name='GunlukDepolamaTesisiSuMiktari',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tarih', models.DateField(verbose_name='Tarih')),
                ('kot', models.FloatField(verbose_name='Kot (m)')),
                ('su_miktari', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Su Miktarı (m³)')),
                ('depolama_tesisi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gunluk_depolama_tesisi_su_miktarlari', to='sulama.depolamatesisi', verbose_name='Depolama Tesisi')),
            ],
            options={
                'verbose_name': 'Günlük Depolama Tesisi Su Miktarı',
                'verbose_name_plural': 'Günlük Depolama Tesisi Su Miktarları',
                'ordering': ['-tarih', 'depolama_tesisi'],
                'unique_together': {('depolama_tesisi', 'tarih')},
            },
        ),
        migrations.CreateModel(
            name='DepolamaTesisiAbak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hacim', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Hacim (m³)')),
                ('kot', models.FloatField(verbose_name='Kot (m)')),
                ('depolama_tesisi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abaklar', to='sulama.depolamatesisi', verbose_name='Depolama Tesisi')),
            ],
            options={
                'verbose_name': 'Depolama Tesisi Abağı',
                'verbose_name_plural': 'Depolama Tesisi Abakları',
                'ordering': ['depolama_tesisi', 'kot'],
                'unique_together': {('depolama_tesisi', 'kot')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='depolamatesisi',
            unique_together={('sulama', 'isim')},
        ),
    ]
